name: Run git-arr and deploy output to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Every day at midnight UTC

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Install git-arr and generate output
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Install dependencies
          sudo apt update && sudo apt install -y python3-bottle python3-pygments python3-markdown

          # Create directories
          mkdir -p /tmp/clones
          mkdir -p out

          # Clone repositories
          REPOS=(
            https://github.com/zuedev/monorepo
            https://github.com/zuedev/arcanum
          )
          for repo in "${REPOS[@]}"; do
            git clone --bare "$repo" /tmp/repos/$(basename "$repo")

            # if the repo is from github.com, grab the description from the api and add it to the repo config
            if [[ "$repo" == *"github.com"* ]]; then
              ORG=$(echo "$repo" | cut -d '/' -f 4)
              DESC=$(gh api https://api.github.com/repos/"$ORG"/$(basename "$repo") | jq -r '.description')

              # if the description is empty, set it to "No description"
              if [[ -z "$DESC" ]]; then
                DESC="No description"
              fi

              # add the description to the config
              echo "$DESC" > /tmp/repos/$(basename "$repo")/description
            fi
          done

          # get git-arr
          wget https://blitiri.com.ar/p/git-arr/files/0.31/git-arr-0.31.tar.gz
          tar -xzf git-arr-0.31.tar.gz
          chmod +x git-arr-0.31/git-arr

          # make our edits to git-arr source
          # replace "git" in all view titles with "code.zue.dev"
          sed -i 's/<title>git/<title>code.zue.dev/g' git-arr-0.31/views/*.html
          # replace "git" in all view h1 tags with "code.zue.dev"
          sed -i 's/<h1>git/<h1>code.zue.dev/g' git-arr-0.31/views/*.html

          # run git-arr
          ./git-arr-0.31/git-arr --config config.conf generate --output out
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: "out"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
